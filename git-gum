#!/bin/bash
#git commit -m "$(gum input --width 50 --placeholder "Summary of changes")" \
#           -m "$(gum write --width 80 --placeholder "Details of changes")"

options="add reset commit"

if [ ! -z $1 ]; then
    input="$1"
    if [[ $input == "--help" ]]; then
        echo Available options are: "$options" 
        exit 0
    fi

    case "$input" in 
       --add | add ) option="add"  ;;
    esac
else
    option=$(echo "$options" | gum filter)
    echo "your choice was $option"
fi

git_status_filter(){
    input=$1

    if [[ $input == "??"* ]]; then
        if [ ! -z "$(git ls-files . --exclude-standard --others -m | grep "${input:3}")" ]; then
            echo $(gum style --foreground 11 ${input:3})
        fi
    elif [[ $input == "MM"* ]]; then
        if [ ! -z "$(git ls-files . --exclude-standard --others -m | grep "${input:3}")" ]; then
            echo $(gum style --foreground 10 ${input:2});
        fi
    else 
        if [ ! -z "$(git ls-files . --exclude-standard --others -m | grep "${input:2}")" ]; then 
            echo $(gum style --foreground 14 ${input:2})
        fi
    fi
}

colorizer(){
    input=$1
    color=$2

    echo $(gum style --foreground $color $input)
}

remove_style(){
    echo $(echo "$1" | sed 's/\x1b\[[0-9;]*[mGKHF]//g')
}


case $option in
    add ) 
        export -f git_status_filter
        selection=`git status --short | xargs -I{} bash -c 'git_status_filter "{}"' _ | gum choose --no-limit`
        git add $(remove_style "$selection")
        ;;
    reset )
        export -f colorizer
        selection=`git diff --staged --name-only HEAD | xargs -I{} bash -c 'colorizer "{}" 9' _ | sed "$ a $(colorizer None 10)" | gum choose --no-limit`
        selection=$(remove_style "$selection")
        if [ -z "$selection" ]; then
            echo "no files staged to remove!"
        elif [ "$selection" = "None" ]; then
            echo "None selected - skipping"
        else
            echo "$selection" | xargs -I{} git reset HEAD -- "{}"
        fi
        ;;
    status )
        git status
        ;;
    "commit")

        ;;
esac


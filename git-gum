#!/bin/bash
#git commit -m "$(gum input --width 50 --placeholder "Summary of changes")" \
#           -m "$(gum write --width 80 --placeholder "Details of changes")"

options=$(echo -e "add\nreset\ncommit")

if [ ! -z $1 ]; then
    input="$1"
    if [[ $input == "--help" ]]; then
        echo Available options are: "$options" 
        exit 0
    fi

    case "$input" in 
       --add | add ) option="add"  ;;
    esac
else
    option=$(echo "$options" | gum filter)
    echo "your choice was $option"
fi

git_status_filter(){
    input=$1

    if [[ $input == "??"* ]]; then
            echo $(gum style --foreground 11 ${input:3})
    elif [[ $input == "MM"* ]]; then
        if [ ! -z "$(git ls-files . --exclude-standard --others -m | grep "${input:3}")" ]; then
            echo $(gum style --foreground 10 ${input:2});
        fi
    else 
        if [ ! -z "$(git ls-files . --exclude-standard --others -m | grep "${input:2}")" ]; then 
            echo $(gum style --foreground 14 ${input:2})
        fi
    fi
}

colorizer(){
    input=$1
    color=$2

    echo $(gum style --foreground $color $input)
}

remove_style(){
    echo $(echo "$1" | sed 's/\x1b\[[0-9;]*[mGKHF]//g')
}

none_text=$(gum style --foreground 10 None)
case $option in
    add ) 
        export -f git_status_filter
        selection=$(git status --short | xargs -I{} bash -c 'git_status_filter "{}"' _ | sed "$ a $(colorizer None 9)" | gum choose --no-limit)
        if [ -z "$selection" ]; then
            echo "No files selected"
        else
            git add $(remove_style "$selection")
        fi
        ;;
    reset )
        #basically, get all staged files - if none, say so-, color them, add "none" to the end, get the selection
        #check if selection is "None" or empty and exit if so, else pass it to git reset
        git_output=$(git status --short | grep '^[MACD]')
        if [ ! -z "$git_output" ]; then
            selection=`$git_output | xargs gum style --foreground 9 | sed '$a'"$none_text" | gum choose --no-limit`
            selection=$(remove_style "$selection")
            if [ -z "$selection" ]; then
                echo "no files staged to remove!"
            elif [ "$selection" = "None" ]; then
                echo "None selected - skipping"
            else
                echo "$selection" | xargs -I{} git reset HEAD -- "{}"
            fi
        else
            echo $(gum style --foreground 10 "No files staged right now" )
        fi
        ;;
    status )
        git status
        ;;
    "commit")

        ;;
esac

